{"version":3,"sources":["components/Uploader.tsx","pages/Home.tsx"],"names":["Dragger","Upload","Result","styled","div","Uploader","observer","useStores","ImageStore","UserStore","props","showUploadList","beforeUpload","file","currentUser","message","warning","test","type","error","size","setFile","setFilename","name","upload","then","console","log","catch","e","className","InboxOutlined","serverFile","filename","target","rel","href","url","Home","Tips","getUsername"],"mappings":"2LAOOA,EAAWC,IAAXD,QACDE,EAASC,IAAOC,IAAV,mMAaNC,EAAqBC,aAAS,WAClC,MAAgCC,cAAzBC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,UAEbC,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAACC,GACb,GAA8B,OAA1BJ,EAAUK,YAEZ,OADAC,IAAQC,QAAQ,qDACT,EAGT,GAAIH,EAAM,CACR,IAAK,wCAAwCI,KAAKJ,EAAKK,MAErD,OADAH,IAAQI,MAAM,0EACP,EAET,GAAIN,EAAKO,KAAO,QAEd,OADAL,IAAQI,MAAM,+BACP,EAETX,EAAWa,QAAQR,GACnBL,EAAWc,YAAYT,EAAKU,MAC5Bf,EAAWgB,SACRC,MAAK,WACJC,QAAQC,IAAI,qBAEbC,OAAM,SAAAC,GACLd,IAAQI,MAAM,4BACdO,QAAQC,IAAI,eAAgBE,WAGhCd,IAAQC,QAAQ,kCAGlB,OAAO,IAGX,OACE,qCACE,eAAChB,EAAD,2BAAaU,GAAb,cACE,mBAAGoB,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,0EACA,mBAAGA,UAAU,kBAAb,sHAEDtB,EAAWwB,WACV,eAAC9B,EAAD,WACE,0DACA,+BACE,oDACA,6BAAKM,EAAWyB,WAChB,8CACA,6BACE,mBAAGC,OAAO,SAASC,IAAI,aAAaC,KAAM5B,EAAWwB,WAAWK,IAAhE,SACG7B,EAAWwB,WAAWK,cAa7B,WCpFJC,EAAiBhC,aAAS,WAC9B,IAAOG,EAAaF,cAAbE,UACD8B,EAAOpC,IAAOC,IAAV,iJAOV,OACE,mCACGK,EAAUK,YACT,qCACE,yCAAYL,EAAUK,YAAY0B,iBAClC,cAACD,EAAD,gMACA,cAAClC,EAAD,OAGF,cAACkC,EAAD,8DAMOD","file":"static/js/10.98c05eae.chunk.js","sourcesContent":["import {observer} from 'mobx-react';\n// import {useRef} from 'react';\nimport {useStores} from 'stores';\nimport {Upload, message} from 'antd';\nimport {InboxOutlined} from '@ant-design/icons';\nimport styled from 'styled-components';\n\nconst {Dragger} = Upload;\nconst Result = styled.div`\n  margin-top: 30px;\n  border: 1px dashed #ccc;\n  padding: 20px;\n  > h2 {\n    margin: 20px 0;\n    text-align: center;\n  }\n  > img {\n    max-width: 300px;\n  }\n`;\n\nconst Uploader: React.FC = observer(() => {\n  const {ImageStore, UserStore} = useStores();\n  // const ref = useRef<HTMLInputElement>(null);\n  const props = {\n    showUploadList: false,\n    beforeUpload: (file: File | null) => {\n      if (UserStore.currentUser === null) {\n        message.warning('请先登录再上传！');\n        return false;\n      }\n\n      if (file) {\n        if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/gi.test(file.type)) {\n          message.error('只能上传png/svg/jpg/gif格式的图片');\n          return false;\n        }\n        if (file.size > 1024 * 1024) {\n          message.error('图片最大1M');\n          return false;\n        }\n        ImageStore.setFile(file);\n        ImageStore.setFilename(file.name);\n        ImageStore.upload()\n          .then(() => {\n            console.log('upload success');\n          })\n          .catch(e => {\n            message.error('上传失败');\n            console.log('upload error', e);\n          });\n      } else {\n        message.warning('请上传文件');\n      }\n\n      return false;\n    },\n  };\n  return (\n    <>\n      <Dragger {...props}>\n        <p className=\"ant-upload-drag-icon\">\n          <InboxOutlined />\n        </p>\n        <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\n        <p className=\"ant-upload-hint\">仅支持.png/.gif/.jpg/.svg格式的图片，图片最大1M </p>\n      </Dragger>\n      {ImageStore.serverFile ? (\n        <Result>\n          <h2>上传结果</h2>\n          <dl>\n            <dt>文件名</dt>\n            <dd>{ImageStore.filename}</dd>\n            <dt>链接</dt>\n            <dd>\n              <a target=\"_blank\" rel=\"noreferrer\" href={ImageStore.serverFile.url}>\n                {ImageStore.serverFile.url}\n              </a>\n            </dd>\n            {/* <dt>预览</dt>\n            <dd>\n              <img src={ImageStore.serverFile.url} alt=\"\" />\n            </dd> */}\n            {/* <dt>更多尺寸</dt>\n            <dd>\n              <input placeholder=\"最大宽度\" />\n            </dd> */}\n          </dl>\n        </Result>\n      ) : null}\n    </>\n  );\n});\n\nexport {Uploader};\n","import {Uploader} from 'components/Uploader';\nimport {observer} from 'mobx-react';\nimport {useStores} from 'stores';\nimport styled from 'styled-components';\n\nconst Home: React.FC = observer(() => {\n  const {UserStore} = useStores();\n  const Tips = styled.div`\n    background-color: orange;\n    padding: 10px;\n    margin: 30px 0;\n    color: #fff;\n    border-radius: 4px;\n  `;\n  return (\n    <>\n      {UserStore.currentUser ? (\n        <>\n          <h2>Hello! {UserStore.currentUser.getUsername()}</h2>\n          <Tips>图片上传后 github pages 生效较慢 请耐心等待。可以在上传历史页获取链接</Tips>\n          <Uploader />\n        </>\n      ) : (\n        <Tips>请登录后上传！</Tips>\n      )}\n    </>\n  );\n});\n\nexport default Home;\n"],"sourceRoot":""}